{"version":3,"sources":["../src/index.js"],"names":["http","fs","qs","contacts","createServer","req","res","console","log","method","url","write","end","body","on","chunk","parse","name","contact","load","then","addContact","save","catch","err","statusCode","readFile","data","listen"],"mappings":";;AAAA;;IAAYA,I;;AACZ;;IAAYC,E;;AAGZ;;IAAYC,E;;AAEZ;;;;AAJA;AACA;AAKA,IAAIC,WAAW,6BAAgB,qBAAhB,CAAf;;AAEAH,KACCI,YADD,CACc,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3B;AACAC,SAAQC,GAAR,CAAYH,IAAII,MAAhB,EAAwBJ,IAAIK,GAA5B;;AAEA,KAAGL,IAAIK,GAAJ,KAAY,GAAf,EAAmB;AAClBJ,MAAIK,KAAJ,CAAU,8BAAV;AACA,SAAOL,IAAIM,GAAJ,EAAP;AACA;;AAED,KAAGP,IAAIK,GAAJ,KAAY,cAAf,EAA8B;AAC7B,MAAIG,OAAO,EAAX;AACAR,MAAIS,EAAJ,CAAO,MAAP,EAAe,iBAAS;AACjBD,WAAQE,KAAR;AACH,GAFJ;;AAIGV,MAAIS,EAAJ,CAAO,KAAP,EAAc,YAAM;AACnBP,WAAQC,GAAR,CAAY,kBAAZ,EAAgCN,GAAGc,KAAH,CAASH,IAAT,CAAhC;AACA,OAAMI,OAAOf,GAAGc,KAAH,CAASH,IAAT,EAAeI,IAA5B;;AAEH,OAAMC,UAAU,yBAAY;AAC3BD,UAAMA;AADqB,IAAZ,CAAhB;;AAIA,UAAOd,SAASgB,IAAT,GACNC,IADM,CACD,YAAM;AACXjB,aAASkB,UAAT,CAAoBH,OAApB;AACAf,aAASmB,IAAT;AACA,IAJM,EAKNF,IALM,CAKD,YAAM;AACXd,QAAIK,KAAJ,kCAA0CO,QAAQD,IAAlD;AACAX,QAAIM,GAAJ;AACA,IARM,EASNW,KATM,CASA,UAACC,GAAD,EAAS;AACfjB,YAAQC,GAAR,CAAY,uBAAZ,EAAqCgB,GAArC;AACAlB,QAAImB,UAAJ,GAAiB,GAAjB;AACAnB,QAAIK,KAAJ,CAAU,uBAAV;AACAL,QAAIM,GAAJ;AACA,IAdM,CAAP;AAeG,GAvBD;AAwBH,EA9BD;AAgCA;AACCX,KAAGyB,QAAH,cAAwBrB,IAAIK,GAA5B,EAAoC,MAApC,EAA4C,UAACc,GAAD,EAAMG,IAAN,EAAe;AAC1D,OAAGH,GAAH,EAAO;AACNjB,YAAQC,GAAR,CAAY,qBAAZ,EAAmCgB,GAAnC;AACAlB,QAAImB,UAAJ,GAAiB,GAAjB;AACAnB,QAAIK,KAAJ,CAAU,iBAAV;AACA,WAAOL,IAAIM,GAAJ,EAAP;AACA;AACD;AACAN,OAAIK,KAAJ,CAAUgB,IAAV;AACArB,OAAIM,GAAJ;AACA,GAVD;AAWD,CAtDD,EAuDCgB,MAvDD,CAuDQ,IAvDR","file":"index.js","sourcesContent":["import * as http from \"http\";\r\nimport * as fs from \"fs\";\r\n// querystring is used to parse url parameters to an object\r\n// also a core module\r\nimport * as qs from \"querystring\";\r\n\r\nimport { Contact, ContactList } from\"./ContactList.js\";\r\n\r\nlet contacts = new ContactList(\"./src/contacts.json\");\r\n\r\nhttp\r\n.createServer((req, res) => {\r\n\t// log the incoming request\r\n\tconsole.log(req.method, req.url);\r\n\r\n\tif(req.url === '/'){\r\n\t\tres.write(\"This is the webserver index.\")\r\n\t\treturn res.end();\r\n\t}\r\n\r\n\tif(req.url === '/add-contact'){\r\n\t\tlet body = \"\";\r\n\t\treq.on(\"data\", chunk => {\r\n\t        body += chunk;\r\n\t    });\r\n\r\n\t    req.on(\"end\", () => {\r\n\t    \tconsole.log(\"Received params:\", qs.parse(body));\r\n\t\t    const name = qs.parse(body).name;\r\n\r\n\t\t\tconst contact = new Contact({\r\n\t\t\t\tname: name\r\n\t\t\t});\r\n\r\n\t\t\treturn contacts.load()\r\n\t\t\t.then(() => {\r\n\t\t\t\tcontacts.addContact(contact);\r\n\t\t\t\tcontacts.save();\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tres.write(`Successfully saved contact: ${ contact.name }`);\r\n\t\t\t\tres.end();\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(\"Error saving contact:\", err);\r\n\t\t\t\tres.statusCode = 500;\r\n\t\t\t\tres.write(\"Error saving contact.\");\r\n\t\t\t\tres.end();\r\n\t\t\t})\r\n\t    });\r\n\t}\r\n\telse\r\n\t// if none the urls above match, search for file in public folder\r\n\t\tfs.readFile(`./public${ req.url }`, \"utf8\", (err, data) => {\r\n\t\t\tif(err){\r\n\t\t\t\tconsole.log(\"Error reading file:\", err);\r\n\t\t\t\tres.statusCode = 404;\r\n\t\t\t\tres.write(\"File not found.\");\r\n\t\t\t\treturn res.end();\r\n\t\t\t}\r\n\t\t\t// console.log(\"Data:\", data);\r\n\t\t\tres.write(data);\r\n\t\t\tres.end();\r\n\t\t});\r\n})\r\n.listen(8080);\r\n"]}