{"version":3,"sources":["../src/ContactList.js"],"names":["fs","require","util","writeFile","promisify","readFile","Contact","name","age","number","phoneNumber","console","log","ContactList","filename","list","contact","push","JSON","stringify","readFilePromise","then","parse","fileString","map","contactObj","Promise","resolve","exports"],"mappings":";;;;;;AAAA,IAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;;AAEA,IAAME,YAAYD,KAAKE,SAAL,CAAeJ,GAAGG,SAAlB,CAAlB;AACA,IAAME,WAAWH,KAAKE,SAAL,CAAeJ,GAAGK,QAAlB,CAAjB;;IAEMC,O;AACF,kBAAYC,IAAZ,EAAkBC,GAAlB,EAAuB;AAAA;;AACnB,OAAKD,IAAL,GAAYA,IAAZ;AACA,OAAKC,GAAL,GAAWA,GAAX;AACH;;;;2BACQC,M,EAAQ;;AAEb,UAAO,KAAKC,WAAL,GAAmBD,MAA1B;AACH;;;yBACO;;AAEH,OAAI,KAAKC,WAAT,EACIC,QAAQC,GAAR,CAAY,aAAa,KAAKL,IAAlB,GAAyB,MAAzB,GAAkC,KAAKG,WAAnD,EADJ,KAGIC,QAAQC,GAAR,CAAY,KAAKL,IAAL,GAAY,6BAAxB;AAEP;;;6BACU;;AAEPI,WAAQC,GAAR,CAAY,aAAa,KAAKL,IAAlB,GAAyB,WAAzB,IAAwC,KAAKC,GAAL,GAAS,CAAjD,IAAsD,cAAlE;AAEH;;;;;;AACL;;IAEKK,W;AACL,sBAAYC,QAAZ,EAAqB;AAAA;;AACpB,OAAKC,IAAL,GAAY,EAAZ;AACA,OAAKD,QAAL,GAAgBA,QAAhB;AACA;;;;6BAEUE,O,EAAQ;AAClB,OAAGA,mBAAmBV,OAAtB,EAA8B;AAC7B,SAAKS,IAAL,CAAUE,IAAV,CAAeD,OAAf;AACA;AACD;;;yBAEK;AACL,UAAOb,UAAU,KAAKW,QAAf,EAAyBI,KAAKC,SAAL,CAAe,KAAKJ,IAApB,CAAzB,EAAoD,MAApD,CAAP;AACA;;;yBAEK;AAAA;;AACL,OAAMK,kBAAkBf,SAAS,KAAKS,QAAd,EAAwB,MAAxB,CAAxB;;AAEA,UAAOM,gBACNC,IADM,CACD,sBAAc;AACnB,UAAKN,IAAL,GAAYG,KAAKI,KAAL,CAAWC,UAAX,EACXC,GADW,CACP;AAAA,YAAc,IAAIlB,OAAJ,CAAYmB,UAAZ,CAAd;AAAA,KADO,CAAZ;;AAGA,WAAOC,QAAQC,OAAR,CAAgB,IAAhB,CAAP;AACA,IANM,CAAP;AAOA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;AACD;;AAEDC,QAAQtB,OAAR,GAAkBA,OAAlB;AACAsB,QAAQf,WAAR,GAAsBA,WAAtB","file":"ContactList.js","sourcesContent":["const fs = require(\"fs\");\r\nconst util = require(\"util\");\r\n\r\nconst writeFile = util.promisify(fs.writeFile);\r\nconst readFile = util.promisify(fs.readFile);\r\n\r\nclass Contact {\r\n    constructor(name, age) {\r\n        this.name = name;\r\n        this.age = age;\r\n    };\r\n    addPhone(number) {\r\n\r\n        return this.phoneNumber = number;\r\n    }\r\n     call() {\r\n\r\n         if (this.phoneNumber)\r\n             console.log(\"Calling \" + this.name + \" at \" + this.phoneNumber);\r\n         else\r\n             console.log(this.name + \" has no phone number saved.\");\r\n\r\n     }\r\n     birthday() {\r\n\r\n         console.log(\"Wishing \" + this.name + \" a happy \" + (this.age+1) + \"th birthday!\");\r\n\r\n     }\r\n};\r\n\r\nclass ContactList {\r\n\tconstructor(filename){\r\n\t\tthis.list = [];\r\n\t\tthis.filename = filename;\r\n\t}\r\n\r\n\taddContact(contact){\r\n\t\tif(contact instanceof Contact){\r\n\t\t\tthis.list.push(contact);\r\n\t\t}\r\n\t}\r\n\r\n\tsave(){\r\n\t\treturn writeFile(this.filename, JSON.stringify(this.list), \"utf8\");\r\n\t}\r\n\r\n\tload(){\r\n\t\tconst readFilePromise = readFile(this.filename, \"utf8\");\r\n\r\n\t\treturn readFilePromise\r\n\t\t.then(fileString => {\r\n\t\t\tthis.list = JSON.parse(fileString)\r\n\t\t\t.map(contactObj => new Contact(contactObj));\r\n\r\n\t\t\treturn Promise.resolve(null);\r\n\t\t});\r\n\t\t// return new Promise((resolve, reject) => {\r\n\t\t// \treadFilePromise\r\n\t\t// \t.then(fileString => {\r\n\t\t// \t\tthis.list = JSON.parse(fileString)\r\n\t\t// \t\t.map(contactObj => new Contact(contactObj));\r\n\t\t\t\t\r\n\t\t// \t\tresolve(null);\r\n\t\t// \t});\r\n\t\t// });\r\n\t}\r\n};\r\n\r\nexports.Contact = Contact;\r\nexports.ContactList = ContactList;"]}